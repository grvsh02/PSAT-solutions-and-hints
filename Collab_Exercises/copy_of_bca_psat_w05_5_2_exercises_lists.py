# -*- coding: utf-8 -*-
"""Copy of BCA_PSAT_W05_5.2_Exercises_Lists.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NjgU6VFKlY5yZLLGxtGQvbcfvKMQAMKH

<br>
&nbsp; <img src="https://www.amrita.edu/ahead/images/aheadlogosticky.svg" alt="AMRITA AHEAD" width="250"> 
<table align="right">
  <td align="left"><a href="https://colab.research.google.com/drive/1ansjrZnYl5Kcss-CRcBOBbYV8cKfFbhc">Prev: Lists in Python</a></td>
  <td align="right"><a href="https://colab.research.google.com/drive/1Fnhkj7B59YNk7Y7UdhlHVMTXrXhPvPOm">Next: Lists built-in functions</a></td>
</table>

# **Week 5 - Lab 5.2 - Simple Exercises on Lists**

For all the exercises mentioned below, write your program in the code segment just below the problem statement.

1. Write a program that returns True if the first and last numbers of the input list are same.<br>Accept [1,2,3] -> False, [1,2,3,1] -> True
"""

items = input()
print(items[0] == items[-1])

"""2. Write a program that returns the sum of the first and last numbers of a list.<br>
Eg. [1,5,3,2,4] -> 1 + 4 = 5
"""

list = eval(input())
print(list[0] + list[-1])

"""3. Write a program that returns True if 9 appears as either first or a last element for a given list of numbers.
<br>[1,3,4,9] → True, <br>[9,3,3,4,9] → True, <br>[3,4,3,4,9,1] → False.
"""

a = eval(input())
if a[-1] == 9 or a[0] == 9:
  print("Yup!!")
else:
  print("No")

"""4. Write a program that checks if the given list is sorted. i.e. the elements are arranged in ascending order.<br>
[3, 5, 6, 9, 10] → True<br>
[3, 5, 9, 6, 10] → False

"""

a = eval(input())

for i in range(len(a)-1):
  if a[i] > a[i+1]:
    print("No")
    break
else :
  print("Yes")

"""5. Write a program that counts the number of odd numbers in a list.<br>
[5, 32, 19, 4, 8, 0] → 2 since 5 and 19 are the only odd numbers
"""

a = eval(input())
count = 0
for i in a:
  if i%2 != 0:
    count += 1
print(count)

"""6. Write a program that prints all the numbers in a list which lie strictly within the range 25 and 50.<br>
[9, 25, 45, 70, 33, 49] → 45, 33, 49
"""

l = eval(input())
for i in l:
  if i >25 and i < 50:
    print(i)

"""7. Write a program to determine the second largest element (or maximum) of the list.<br>
[9,25, 45,70,33,49] → 49
"""

l = eval(input())
l.sort()
print(l[-2])

"""8. A list/array is said to be unimodal if the elements keeps increasing to a peak and then starts decreasing. Write a program to determine if the given list is unimodal or not.<br>
[2,3,5,6,4,2,1] → True<br>
[2,3,5,6,7,9,1] → True<br>
[2,3,5,6,7,8,9] → False (only increasing)<br>
[2,3,5,6,4,7,1] → False (increasing, decreasing, again increasing)<br>
"""

l = eval(input())
flag = 0
a = max(l)
a = l.index(a)
print(len(l))
if a == len(l)-1:
  print("Nope")
else :
  for i in range(len(l)-1):
    if i == a:
      flag = 1
    if l[i] < l[i+1]:
      if flag != 0:
        print("No")
        break
    if l[i] > l[i+1]:
      if flag != 1:
        print("No")
        break
  else :
    print("yes")

"""9. Write a program that takes a *list* and an element *key* as input and check if *key* is present in the *list*.<br>
[2,3,5,6,4,2,1], 5 → True<br>
[2,3,5,6,4,2,1], 8 → False
"""

l = eval(input())
a = int(input())
print(a in l)

"""10. Write a function that returns the given list in reverse order.
<br>
[1,2,3,4] → [4,3,2,1]
"""

l = eval(input())
l.reverse()
print(l)

"""
11. For given two list of numbers a and b, return True if they have the same first element or they have the same last element. <br>
[1, 2, 3], [7, 3] → True<br>
[1, 2, 3], [7, 3, 2] → False
<br>[1, 2, 3], [1, 3] → True"""

l1 = eval(input())
l2 = eval(input())
print(l1[-1] == l2[-1])

"""12. Write a program that find the sum of all numbers in even indices for a given list.

"""

l = eval(input())
sum = 0
for i in range(0,len(l),2):
  sum = sum + l[i]
print(sum)

"""13. Write a function to return list of numbers "rotated left" once. so [1, 2, 3] yields [2, 3, 1].
<br>rotate_left([1, 2, 3]) → [2, 3, 1]
<br>rotate_left([5, 11, 9]) → [11, 9, 5]
<br>rotate_left([7, 0, 0]) → [0, 0, 7]
"""

l = eval(input())
l.append(l[0])
l.remove(l[0])
print(l)

"""14. Write a program for a given list of numbers, create a new list which contains only the odd numbers from the given list.
<br>
odd_list[3,6,8,10,11]) → [3,11]

"""

l = eval(input())
l1 = []
for i in l:
  if i % 2 != 0:
    l1.append(i)
print(l1)

"""15. Given a list of numbers with all of its elements sorted in non-descending order, determine and print the count of distinct elements in it.
<br>
[1 2 2 3 3 3] → 3
<br>[1 2 3 4 5] → 5
"""

l = eval(input())
l1 = []
for i in l:
  if i not in l1:
    l1.append(i)
print(len(l1))

"""16. Given a list of numbers, swap adjacent items in pairs (A[0] with A[1], A[2] with A[3], etc.). Print the resulting list. If a list has an odd number of elements, leave the last element in place.<br>
[1 2 3 4 5] → [2 1 4 3 5]
<br>
[4 5 3 4 2 3] → [5 4 4 3 3 2]
"""

l = eval(input())
i = 0
l2 = []
while i+1 < len(l):
  l2.append(l[i+1])
  l2.append(l[i])
  i = i + 2
print(l2)

"""17. For the given list of distinct numbers, swap the largest and smallest elements.
<br>
[1,2,3,4,5] → [5,2,3,4,1]
<br> [2,3,1,45,33] → [2,3,45,1,33]
"""

l = eval(input())
a = max(l)
a_i = l.index(a)
b = min(l)
b_i = l.index(b)
l.remove(a)
l.remove(b)
l.insert(b_i,a)
l.insert(a_i,b)
print(l)

"""18. Write a program which takes a list of strings as input and concatenates them all into a single string.<br>
['Hi', 'How','Are','You'] → 'HiHowAreYou'


"""

l = eval(input())
s = "".join(l)
print(s)

"""19. Write a program which takes a list of strings as input and concatenates them all into a single string with a space in between.<br>
['Hi', 'How','Are','You'] → 'Hi How Are You'
"""

l = eval(input())
s = " ".join(l)
print(s)

"""20. Write a program that takes a single string with whitespaces in between and tokenizes into a string list separated by space.
'Hi,How,Are,You' → ['Hi', 'How', 'Are', 'You']
"""

s = input()
l = list(map(str,s.split(",")))
print(l)

"""List is mutable unlike strings
s = s.operation()
l.operation()
print(l)

s= 'abc'
print(abc)
s = s.operation()
print(s)
"""